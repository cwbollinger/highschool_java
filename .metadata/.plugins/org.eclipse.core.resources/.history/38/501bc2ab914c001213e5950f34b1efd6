
public class CalculatePi {

	public double getValue() {
		int n1, n2;
		int count = 0;
		
		int i;
		for(i = 0; i < 10000; i++) {
			n1 = (int) Math.round(Math.random()*100000.0);
			n2 = (int) Math.round(Math.random()*100000.0);
			if(relPrime(n1, n2)) {
				count++;
			}
			System.out.println(i);
		}
		
		System.out.println(count);
		System.out.println(i);
		double probRelPrime = (double) (count) / (double) (i);
		System.out.println(probRelPrime);
		
		double pi = Math.sqrt(6/probRelPrime);
		return pi;
	}
	
	public boolean relPrime(int n1, int n2) {
		double r, r_prev, temp;
		int count;
		
		r = 0;
		
		if(n1 == n2) {
			return false;
		} else if (n1 < n2) {
			r = n1;
			r_prev = n2;
		} else {
			r_prev = n1;
			r = n2;
		}
		while(true) {
			count = 0;
			while((r_prev - count*r) >= r) {
				count++;
			}
			temp = r;
			r = r_prev - count*r;
			r_prev = temp;
			if(r == 0.0) {
				if(r_prev == 1.0) {
					return true;
				} else {
					return false;
				}
			}
		}
	}
}
